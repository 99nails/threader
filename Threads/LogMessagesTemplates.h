#pragma once

#include "MessageLog.h"

/**
 * Шаблоны сообщений
 *
 * Уровни сообщений
 * 9 - обмен по сети между компонентами системы
 * нижний уровень обмена с устройствами (сырые данные)
 * 8 - уровень протокола обмена с устройствами
 * 5 - на данный момент - тестовые скрипты
 * 1 - всегда предупреждения
 * 0 - всегда ошибки
 */

namespace Threader {

namespace Threads {

// Сообщения подсистемы протоколирования работы служб

MESSAGE_TEMPLATE(0, 0, Message,
                 "Запуск подсистемы протоколирования работы службы...");

MESSAGE_TEMPLATE(1, 0, Warning,
                 "Завершение подсистемы протоколирования работы службы...");

MESSAGE_TEMPLATE(2, 0, Message,
                 "Подсистема протоколирования работы службы завершена");

MESSAGE_TEMPLATE(3, 0, Error,
                 "ПОДСИСТЕМА ПРОТОКОЛИРОВАНИЯ ПОВТОРНО ОТКРЫЛА ФАЙЛ!");

MESSAGE_TEMPLATE(50, 0, Debug,
                 "%s: %s");

// Сообщения базового главного потока службы

MESSAGE_TEMPLATE(100, 0, Message,
                 "Запуск главного потока службы [%s]...");

MESSAGE_TEMPLATE(101, 0, Warning,
                 "Завершение главного потока службы [%s]...");

MESSAGE_TEMPLATE(102, 0, Message,
                 "Главный поток службы [%s] завершен");

MESSAGE_TEMPLATE(103, 0, Message,
                 "Запуск потоков службы [%s]...");

MESSAGE_TEMPLATE(104, 0, Message,
                 "Запуск потоков службы [%s] завершен");


MESSAGE_TEMPLATE(110, 0, Message,
                 "Чтение настроек службы из файла [%s]");

MESSAGE_TEMPLATE(111, 0, Message,
                 "Настройки службы успешно прочитаны из файла [%s]");

MESSAGE_TEMPLATE(112, 0, Warning,
                 "Ошибка чтения настроек службы из файла [%s]. Используются настройки по умолчанию");

MESSAGE_TEMPLATE(113, 0, Message,
                 "Служба [%s] версия [%s]");

MESSAGE_TEMPLATE(120, 0, Message,
                 "Статистика выполнения - потоков: %d шт., используемая память: %d Kb, сообщений: %d шт.");

}}
